.. _Document:

================
**Document**
================

Document interface, created by :func:`open_document`.

Methods
=======

======================================== ======================================================================
:meth:`~Document.authenticate_password`  Test if the given password can decrypt the document.
:meth:`~Document.count_page`             Return the number of pages in document
:meth:`~Document.load_page`              Load a page.
:meth:`~Document.load_outline`           Load the hierarchical document outline.
:meth:`~Document.needs_password`         Check if a document is encrypted with a non-blank password.
:meth:`~Document.write_document`         Write a document out.
======================================== ======================================================================

Class API
==========

.. class:: Document

   .. method:: load_page(self, number)
   
      Load a page. After :meth:`~Document.load_page` is it possible to retrieve the size of the page using :meth:`Page.bound_page`, or to render the page using :meth:`Page.run_page`

      :param `number`: page number, 0 is the first page of the document.
      :type `number`: int

      :rtype: :ref:`Page`

   .. method:: load_outline(self)

      Load the hierarchical document outline.

      :rtype: :ref:`Outline`

   .. method:: needs_password(self)

      Check if a document is encrypted with a non-blank password.

      :rtype: int

      :returns: ``1`` if password needed, ``0`` otherwise.

   .. method:: authenticate_password(self, password)

      Test if the given password can decrypt the document.

      :param `password`: The password string to be checked. 
      :type `password`: string

      :rtype: int
      :returns: ``1`` if the password authenticated, ``0`` otherwise.

   .. method:: count_page(self)

      Return the number of pages in document. May return 0 for documents with no pages.

      :rtype: int

   .. method:: write_document(self, filename, writeoptions)

      Write a document out.

      Save a copy of the current document in its original format. Internally the document may change.

      :param `filename`: The filename to save to.
      :type `filename`: string
      :param `writeoptions`: 
      :type `writeoptions`: :ref:`WriteOptions`
